{"meta":{"app":"FEATool Multiphysics","author":"Precise Simulation","build":"1.9.1","date":"26-Feb-2019","descr":["The classic double-slit experiment considers a planar and periodic oscillating wave which hits and passes two narrow slits. Assuming the slits are narrow enough, the passing waves will bend and cause an interference pattern, while diffraction will attenuate the off axis resulting amplitude.","","In the example the Helmholtz equation is used to model the wave phenomena","","    -(Axx + Ayy) - k^2*A = 0","","where _A_ is the amplitude of the wave,and _k_ the wave number (_k = 2*pi/lambda_)."],"dim":2,"image":"interference_diffraction1.jpg","keyw":["pde","diffraction","Helmholtz_equation"],"mlver":"R2018b","name":"interference_diffraction1","phys":["Custom Equation"],"system":"","time":737517,"title":"Interference and Diffraction","type":"Custom Equation","user":"precsim","ver":[1,9,1]},
"fields":["type","id","ui_arg","fcn_type","fcn_oarg"],
"data":[
["uipushtool","Standard.NewFigure",[],"ClickedCallback",[]],
["uicontrol","popup_physsel",["Custom Equation"],"Callback",[]],
["uicontrol","edit_depvar","A","Callback",[]],
["uicontrol","button_dlgnew_ok",[],"Callback",[]],
["uimenu",["Geometry","Create Object...","Circle"],[],"Callback",[]],
["uicontrol","edit_radius","0.8","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uimenu",["Geometry","Create Object...","Rectangle"],[],"Callback",[]],
["uicontrol","edit_x_min","-0.8","Callback",[]],
["uicontrol","edit_x_max","0.8","Callback",[]],
["uicontrol","edit_y_min","-0.8","Callback",[]],
["uicontrol","edit_y_max","0","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uicontrol","list_select_gobj",["C1","R1"],"Callback",[]],
["uicontrol","button_subtract_gobj",[],"Callback",[]],
["uimenu",["Geometry","Create Object...","Rectangle"],[],"Callback",[]],
["uicontrol","edit_x_min","-0.08-0.02","Callback",[]],
["uicontrol","edit_x_max","-0.08+0.02","Callback",[]],
["uicontrol","edit_y_min","-0.2","Callback",[]],
["uicontrol","edit_y_max","0","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uimenu",["Geometry","Create Object...","Rectangle"],[],"Callback",[]],
["uicontrol","edit_x_min","0.08-0.02","Callback",[]],
["uicontrol","edit_x_max","0.08+0.02","Callback",[]],
["uicontrol","edit_y_min","-0.2","Callback",[]],
["uicontrol","edit_y_max","0","Callback",[]],
["uicontrol","button_dlggobj_ok",[],"Callback",[]],
["uicontrol","list_select_gobj",["CS1","R2","R3"],"Callback",[]],
["uicontrol","button_join_gobj",[],"Callback",[]],
["uicontrol","button_grid_mode",1,"Callback",[]],
["uicontrol","grid_hmax","0.015"],
["uicontrol","grid_generate",[],"Callback",[]],
["uicontrol","button_equation_mode",1,"Callback",[]],
["uicontrol","button_eqnedit_ce",[],"Callback",[]],
["uicontrol","edit_eqn1","-(Ax_x + Ay_y) - k^2*A_t = 0","Callback",[]],
["uicontrol","button_dlgediteqn_ok",[],"Callback",[]],
["%uicontrol","popup_sfun_ce",["(P2/Q2) second order conforming"],"Callback",[]],
["uicontrol","button_dlgeqn_ok",[],"Callback",[]],
["uitext",[],["Press the **Constants** _Toolbar_ button, or select the corresponding entry from the _Equation_ menu, and add the following modeling constants for the wave length _wl_, and wave number _k_ in the _Model Constants and Expressions_ dialog box.","| Name | Expression |","|------|------------|","|  wl  |  0.08      |","|  k   |  pi*2/wl   |"]],
["uicontrol*","button_const_expr",[],"Callback",[]],
["uicontrol*","edit_dlgexpr_11","wl","Callback",[]],
["uicontrol*","edit_dlgexpr_12","0.08","Callback",[]],
["uicontrol*","edit_dlgexpr_21","k","Callback",[]],
["uicontrol*","edit_dlgexpr_22","pi*2/wl","Callback",[]],
["uicontrol*","button_dlgexpr_ok",[],"Callback",[]],
["uicontrol","button_boundary_mode",1,"Callback",[]],
["uitext*",[],"First set homogenous Neumann conditions for all boundaries."],
["uicontrol","list_seldom",["1","2","3","4","5","6","7","8","9","10","11"],"Callback",[]],
["uicontrol","radio_bccoef12_ce",1,"Callback",[]],
["uicontrol","edit_bccoef13_ce","0","Callback",[]],
["uitext*",[],"An incoming planar wave is featured at the inlet with the complex boundary condition _n*grad(A) + k*i*A = 2*k*i_ which can be implemented as a Neumann boundary condition."],
["uicontrol","list_seldom",["4","8"],"Callback",[]],
["uicontrol","edit_bccoef13_ce","-k*i*A + 2*k*i","Callback",[]],
["uitext*",[],"The outlet is assumed non-reflective and _n*grad(A) + k*i*A = 0_."],
["uicontrol","list_seldom",["1","2"],"Callback",[]],
["uicontrol","edit_bccoef13_ce","-k*i*A","Callback",[]],
["uicontrol","button_dlgbdr_ok",[],"Callback",[]],
["uicontrol","button_solve_mode",1,"Callback",[]],
["uicontrol","button_solve",[],"Callback",[]],
["uitext*",[],"After the problem has been solved FEATool will automatically switch to postprocessing mode and here display the computed wave amplitude _A_. The interference pattern can be clearly seen with four lines where the waves have been canceled out completely."],
["uitext*",[],"The _Point/Line Evaluation_ tool can be used to visualize the interference and diffraction pattern at the boundary."],
["uimenu",["Post","Point/Line Evaluation..."],[],"Callback",[]],
["uicontrol","list_selbdrcoord",["1","2"],"Callback",[]],
["uicontrol","buttons_dlgpntline_ok",[],"Callback",[]],
["figure","Line Evaluation",{},"closeRequestFcn",{}],
["uivalidate",[],"pass=0;try,pass=mean(real(evalexpr('A',[-0.6255 -0.2071 0.2071 0.6255;0.4987 0.7726 0.7726 0.4987],fea)))<0.005;;catch,end"]
]}
