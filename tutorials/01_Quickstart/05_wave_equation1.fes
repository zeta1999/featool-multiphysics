{"meta":{"app":"FEATool Multiphysics","author":"Precise Simulation","build":"1.9.1","date":"21-Jan-2019","descr":["This tutorial explains how to set up and solve a generalized wave equation model. The wave equation is a hyperbolic partial differential equation (PDE) of the form _d2u/dt2 = cd2u/dx2 + f_ where _c_ is a constant defining the propagation speed of the waves, and _f_ is a source term. This equation can not be solved as it is due to the second order time derivative. However, the problem can be transformed by reformulating the wave equation as two coupled parabolic PDEs, that is","","_du/dt = v_,_dv/dt = cd2u/dx2 + f_","","This dual coupled problem can easily be implemented in FEATool with the custom equation feature. This example solves the wave equation on a unit circle, with zero boundary conditions, constant _c = 1_, source term _f = 0_, and initial condition _u(t=0) = 1-(x^2+y^2)_."],"dim":2,"image":"wave_equation1.jpg","keyw":["quickstart","pde","wave_equation","customization"],"mlver":"R2019a","name":"wave_equation1","phys":["Custom Equation"],"system":"","time":737446,"title":"Wave Equation on a Circle","type":"Classic PDE","user":"precsim","ver":[1,9,1]},
"fields":["type","id","ui_arg","fcn_type","fcn_oarg"],
"data":[
["uipushtool","Standard.NewFigure",[],"ClickedCallback",[]],
["uitext",[],"In the **New Model** dialog box, first click on the **2D** radio button in the _Select Space Dimensions_ section, and select **Custom Equation** from the _Select Physics_ drop-down menu. Leave the space dimension names as _x y_, but change the dependent variable names to `u v` (the custom equation physics mode allows for entering an arbitrary number of dependent variables). This will add two equations for _u_ and _v_, respectively. Finish and close the dialog box by clicking on the **OK** button."],
["uicontrol*","radio_2d",0,"Callback",[]],
["uicontrol*","popup_physsel",["Custom Equation"],"Callback",[]],
["uicontrol*","edit_depvar","u v","Callback",[]],
["uicontrol*","button_dlgnew_ok",[],"Callback",[]],
["uitext*",[],"Create a unit circle with radius _1_ centered at the origin _(0, 0)_."],
["uimenu",["Geometry","Create Object...","Circle"],{},"Callback",{}],
["uicontrol","edit_center","0 0","Callback",[]],
["uicontrol","edit_radius","1","Callback",[]],
["uicontrol","button_dlggobj_ok",{},"Callback",[]],
["uicontrol","button_grid_mode",1,"Callback",[]],
["uitext*",[],"The default grid may be too coarse ensure an accurate solution. Decrease the grid size to generate a finer grid that better can resolve the curved boundary."],
["uicontrol","grid_hmax","0.1"],
["uicontrol","grid_generate",[],"Callback",[]],
["uicontrol","button_equation_mode",1,"Callback",[]],
["uitext",[],"Equation and material coefficients are specified in _Equation/Subdomain_ mode. Set the initial condition _u0_ to `1-(x^2+y^2)` and _v0_ to `0`. Then click on the **edit** button to open the equation editing dialog box."],
["uicontrol*","eqn_init1_ce","1-(x^2+y^2)","Callback",[]],
["uitext",[],"In the _Edit Equations_ dialog box enter the equations as `u' - v_t = 0`, and `v' - c*(ux_x + uy_y) = 0` in the corresponding edit fields for _u_ and _v_. Here _u_ and _v_ are the dependent variables, _u'/v'_ denotes a corresponding time derivative, and an underscore will treat it implicitly in the weak finite element formulation (for example _v_t_ corresponds to _v_ multiplied with the test function for _u_, and _ux_x_ is analogous to _du/dx*dv_t/dx_). Note, that the first equation could also be written as _u' = v_ but then _v_ would be evaluated explicitly in the right hand side, by transferring it to the implicit left hand side matrix gives a linear problem which is more efficient to solve."],
["uicontrol*","button_eqnedit_ce",[],"Callback",[]],
["uicontrol*","edit_eqn1","u' - v_t = 0","Callback",[]],
["uicontrol*","edit_eqn2","v' - c*(ux_x + uy_y) = 0","Callback",[]],
["uicontrol*","button_dlgediteqn_ok",[],"Callback",[]],
["uicontrol","button_dlgeqn_ok",[],"Callback",[]],
["uitext*",[],"A convenient way to to define and store coefficients, variables, and expressions is using the _Model Constants and Expressions_ functionality. The defined expressions can then be used in point, equation, boundary coefficients, as well as postprocessing expressions, and can easily be changed and updated in a single place."],
["uitext",[],"Click on the **Constants** _Toolbar_ button and enter a new constant named `c` with value `1` (this is the constant used in diffusion term of the second _v_ equation). Press **OK** to finish."],
["uicontrol*","button_const_expr",[],"Callback",[]],
["uicontrol*","edit_dlgexpr_11","c","Callback",[]],
["uicontrol*","edit_dlgexpr_12","1","Callback",[]],
["uicontrol*","button_dlgexpr_ok",[],"Callback",[]],
["uitext",[],"Press the **Boundary** _Mode Toolbar_ button to change to boundary condition specification mode, and select **Dirichlet conditions** with prescribed value `0` for all boundaries."],
["uicontrol*","button_boundary_mode",1,"Callback",[]],
["uicontrol*","list_seldom",["1","2","3","4"],"Callback",[]],
["uicontrol*","edit_bccoef13_ce","0","Callback",[]],
["uicontrol*","edit_bccoef23_ce","0","Callback",[]],
["uicontrol*","button_dlgbdr_ok",[],"Callback",[]],
["uicontrol","button_solve_mode",1,"Callback",[]],
["uitext",[],"Press the **Settings** _Toolbar_ button to open the _Solver Settings_ dialog box, and select the **Time-Dependent** _Solver Type_ option and set the _Time step_ to `0.05`."],
["uicontrol*","button_solver_settings",[],"Callback",[]],
["uicontrol*","solver",[" Time-Dependent"],"Callback",[]],
["uicontrol*","tstep","0.05","Callback",[]],
["uitext",[],"To start the solver with the chosen settings press the **Solve** button, or press **OK** and then the **=** _Toolbar_ button."],
["uicontrol*","button_dlgsolversettings_solve",[],"Callback",[]],
["uitext*",[],"The solution at different time steps can visualized by selected in the corresponding solution times and visualization options in the postprocessing settings dialog box."],
["uicontrol","button_post_settings",[],"Callback",[]],
["uicontrol","ffsurfh",1,"Callback",[]],
["uicontrol","fsolnum",["0.65"],"Callback",[]],
["uicontrol","button_dlgpost_ok",[],"Callback",[]],
["uivalidate",[],"pass=0;try,u_ref=-0.958;[~,isol]=min(abs(fea.sol.t-1));pass=abs(u_ref-evalexpr('u',[0;0],fea,isol))/abs(u_ref)<0.1;catch,end"]
]}
