function [ vBase, nLDof, xLDof, sfun ] = sf_hex_Q4( i_eval, n_sdim, n_vert, i_dof, xi, aInvJac, vBase )
%SF_HEX_Q4 Triquartic conforming shape function for hexahedrons (Q4).
%
%   [ VBASE, NLDOF, XLDOF, SFUN ] = SF_HEX_Q4( I_EVAL, N_SDIM, N_VERT, I_DOF, XI, AINVJAC, VBASE )
%   Evaluates conforming triquartic Q4 shape functions on hexahedrons with values defined
%   in the nodes, edges, faces, and cell center. XI is [-1..1]^3 reference coordinates.
%
%       Input       Value/[Size]           Description
%       -----------------------------------------------------------------------------------
%       i_eval      scalar:  1             Evaluate function values
%                           >1             Evaluate values of derivatives
%       n_sdim      scalar:  3             Number of space dimensions
%       n_vert      scalar:  8             Number of vertices per cell
%       i_dof       scalar: 1-n_ldof       Local basis function to evaluate
%       xi          [n_sdim]               Local coordinates of evaluation point
%       aInvJac     [n,n_sdim*n_sdim]      Inverse of transformation Jacobian
%       vBase       [n]                    Preallocated output vector
%                                                                                         .
%       Output      Value/[Size]           Description
%       -----------------------------------------------------------------------------------
%       vBase       [n]                    Evaluated function values
%       nLDof       [4]                    Number of local degrees of freedom on
%                                          vertices, edges, faces, and cell interiors
%       xLDof       [n_sdim,n_ldof]        Local coordinates of local dofs
%       sfun        string                 Function name of called shape function
%
%   See also SFLAG4, SF_HEX_Q1

% Copyright 2013-2020 Precise Simulation, Ltd.


nLDof = [8 36 54 27];
xLDof = [-1  1  1 -1 -1  1 1 -1 -1/2    1 1/2  -1   -1    1    1   -1 -1/2    1 1/2  -1  0  1  0 -1 -1  1 1 -1  0 1 0 -1 1/2   1 -1/2   -1  -1   1   1  -1 1/2   1 -1/2   -1 -1/2 -1/2    1  1/2   -1 -1/2    0    0    1    0   -1    0  1/2  1/2    1 -1/2   -1  1/2 1/2 1/2   1 -1/2   -1 1/2 1/2 1/2   1 -1/2   -1 1/2   0   0   1   0  -1   0 -1/2 -1/2    1 1/2  -1 -1/2 -1/2 -1/2    1 1/2  -1 -1/2  0  0 1 0 -1 0 -1/2    0  1/2 -1/2    0  1/2 -1/2    0  1/2 -1/2    0  1/2 -1/2 0 1/2 -1/2   0 1/2 -1/2    0  1/2 -1/2   0 1/2 -1/2   0 1/2;
         -1 -1  1  1 -1 -1 1  1   -1 -1/2   1 1/2   -1   -1    1    1   -1 -1/2   1 1/2 -1  0  1  0 -1 -1 1  1 -1 0 1  0  -1 1/2    1 -1/2  -1  -1   1   1  -1 1/2    1 -1/2 -1/2   -1 -1/2    1  1/2 -1/2 -1/2   -1    0    1    0 -1/2 -1/2   -1  1/2    1 -1/2 -1/2   0  -1 1/2    1 -1/2   0 1/2  -1 1/2    1 -1/2 1/2 1/2  -1   0   1   0 1/2  1/2   -1 -1/2   1 1/2  1/2    0   -1 -1/2   1 1/2    0  0 -1 0 1  0 0 -1/2 -1/2 -1/2    0    0    0  1/2  1/2  1/2 -1/2 -1/2 -1/2    0 0   0  1/2 1/2 1/2 -1/2 -1/2 -1/2    0   0   0  1/2 1/2 1/2;
         -1 -1 -1 -1  1  1 1  1   -1   -1  -1  -1 -1/2 -1/2 -1/2 -1/2    1    1   1   1 -1 -1 -1 -1  0  0 0  0  1 1 1  1  -1  -1   -1   -1 1/2 1/2 1/2 1/2   1   1    1    1   -1 -1/2 -1/2 -1/2 -1/2    1   -1 -1/2 -1/2 -1/2 -1/2    1   -1 -1/2 -1/2 -1/2 -1/2    1  -1   0   0    0    0   1  -1 1/2 1/2  1/2  1/2   1  -1 1/2 1/2 1/2 1/2   1   -1  1/2  1/2 1/2 1/2    1   -1    0    0   0   0    1 -1  0 0 0  0 1 -1/2 -1/2 -1/2 -1/2 -1/2 -1/2 -1/2 -1/2 -1/2    0    0    0    0 0   0    0   0   0  1/2  1/2  1/2  1/2 1/2 1/2  1/2 1/2 1/2];
sfun  = 'sf_hex_Q4';


switch i_eval

  case 1

    switch i_dof
      case 1
        vBase = -(xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/216;
      case 2
        vBase = -(xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/216;
      case 3
        vBase = -(xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/216;
      case 4
        vBase = -(xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/216;
      case 5
        vBase = -(xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/216;
      case 6
        vBase = -(xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/216;
      case 7
        vBase = -(xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/216;
      case 8
        vBase = -(xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/216;
      case 9
        vBase = (xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/27;
      case 10
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/27;
      case 11
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/27;
      case 12
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/27;
      case 13
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/27;
      case 14
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/27;
      case 15
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/27;
      case 16
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/27;
      case 17
        vBase = (xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/27;
      case 18
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/27;
      case 19
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/27;
      case 20
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/27;
      case 21
        vBase = (xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/36;
      case 22
        vBase = (xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/36;
      case 23
        vBase = (xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/36;
      case 24
        vBase = (xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/36;
      case 25
        vBase = (xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1))/36;
      case 26
        vBase = (xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1))/36;
      case 27
        vBase = (xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1))/36;
      case 28
        vBase = (xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1))/36;
      case 29
        vBase = (xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/36;
      case 30
        vBase = (xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/36;
      case 31
        vBase = (xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/36;
      case 32
        vBase = (xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/36;
      case 33
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/27;
      case 34
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/27;
      case 35
        vBase = (xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/27;
      case 36
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/27;
      case 37
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 38
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 39
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 40
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 41
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/27;
      case 42
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/27;
      case 43
        vBase = (xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/27;
      case 44
        vBase = (xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/27;
      case 45
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/27;
      case 46
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/27;
      case 47
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/27;
      case 48
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/27;
      case 49
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/27;
      case 50
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/27;
      case 51
        vBase = -(2*xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/9;
      case 52
        vBase = -(2*xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/9;
      case 53
        vBase = -(2*xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/9;
      case 54
        vBase = -(2*xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/9;
      case 55
        vBase = -(2*xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/9;
      case 56
        vBase = -(2*xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/9;
      case 57
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/27;
      case 58
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/27;
      case 59
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/27;
      case 60
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/27;
      case 61
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/27;
      case 62
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/27;
      case 63
        vBase = -(2*xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/9;
      case 64
        vBase = -(2*xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/9;
      case 65
        vBase = -(2*xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/9;
      case 66
        vBase = -(2*xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1))/9;
      case 67
        vBase = -(2*xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1))/9;
      case 68
        vBase = -(2*xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/9;
      case 69
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/27;
      case 70
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 71
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 72
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 73
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 74
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/27;
      case 75
        vBase = -(2*xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/9;
      case 76
        vBase = -(2*xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/9;
      case 77
        vBase = -(2*xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/9;
      case 78
        vBase = -(2*xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/9;
      case 79
        vBase = -(2*xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/9;
      case 80
        vBase = -(2*xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/9;
      case 81
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/27;
      case 82
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 83
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 84
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 85
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 86
        vBase = -(8*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/27;
      case 87
        vBase = -(2*xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/9;
      case 88
        vBase = -(2*xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1))/9;
      case 89
        vBase = -(2*xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1))/9;
      case 90
        vBase = -(2*xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/9;
      case 91
        vBase = -(2*xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/9;
      case 92
        vBase = -(2*xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/9;
      case 93
        vBase = -(xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 4*xi(3)^3 + 4*xi(3)^2 + xi(3) - 1))/6;
      case 94
        vBase = -(xi(2)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(2)^3 + 4*xi(2)^2 + xi(2) - 1))/6;
      case 95
        vBase = -(xi(1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(1)^3 - 4*xi(1)^2 + xi(1) + 1))/6;
      case 96
        vBase = -(xi(2)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(2)^3 - 4*xi(2)^2 + xi(2) + 1))/6;
      case 97
        vBase = -(xi(1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 4*xi(1)^3 + 4*xi(1)^2 + xi(1) - 1))/6;
      case 98
        vBase = -(xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 4*xi(3)^3 - 4*xi(3)^2 + xi(3) + 1))/6;
      case 99
        vBase = (64*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/27;
      case 100
        vBase = (16*xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/9;
      case 101
        vBase = (64*xi(1)*xi(2)*xi(3)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/27;
      case 102
        vBase = (16*xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/9;
      case 103
        vBase = (4*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1))/3;
      case 104
        vBase = (16*xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/9;
      case 105
        vBase = (64*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/27;
      case 106
        vBase = (16*xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/9;
      case 107
        vBase = (64*xi(1)*xi(2)*xi(3)*(- 2*xi(3)^3 + xi(3)^2 + 2*xi(3) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/27;
      case 108
        vBase = (16*xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1))/9;
      case 109
        vBase = (4*xi(2)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1))/3;
      case 110
        vBase = (16*xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/9;
      case 111
        vBase = (4*xi(1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1))/3;
      case 112
        vBase = (4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1);
      case 113
        vBase = (4*xi(1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1))/3;
      case 114
        vBase = (16*xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/9;
      case 115
        vBase = (4*xi(2)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/3;
      case 116
        vBase = (16*xi(1)*xi(2)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1))/9;
      case 117
        vBase = (64*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 118
        vBase = (16*xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/9;
      case 119
        vBase = (64*xi(1)*xi(2)*xi(3)*(- 2*xi(2)^3 + xi(2)^2 + 2*xi(2) - 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 120
        vBase = (16*xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/9;
      case 121
        vBase = (4*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/3;
      case 122
        vBase = (16*xi(1)*xi(3)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/9;
      case 123
        vBase = (64*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 + xi(1)^2 + 2*xi(1) - 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
      case 124
        vBase = (16*xi(2)*xi(3)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/9;
      case 125
        vBase = (64*xi(1)*xi(2)*xi(3)*(- 2*xi(1)^3 - xi(1)^2 + 2*xi(1) + 1)*(- 2*xi(2)^3 - xi(2)^2 + 2*xi(2) + 1)*(- 2*xi(3)^3 - xi(3)^2 + 2*xi(3) + 1))/27;
    end

  case {2,3,4}

    switch i_dof
      case 1
        dNdxi1 = -(xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) - 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/216;
        dNdxi2 = -(xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) - 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/216;
        dNdxi3 = -(xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(2) - 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/216;
      case 2
        dNdxi1 = (xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) - 1)*(4*xi(1)^2 + 2*xi(1) - 1))/216;
        dNdxi2 = -(xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) - 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/216;
        dNdxi3 = -(xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) + 1)*(xi(2) - 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/216;
      case 3
        dNdxi1 = (xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) - 1)*(4*xi(1)^2 + 2*xi(1) - 1))/216;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) - 1)*(4*xi(2)^2 + 2*xi(2) - 1))/216;
        dNdxi3 = -(xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) + 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/216;
      case 4
        dNdxi1 = -(xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) - 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/216;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) - 1)*(4*xi(2)^2 + 2*xi(2) - 1))/216;
        dNdxi3 = -(xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/216;
      case 5
        dNdxi1 = -(xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/216;
        dNdxi2 = -(xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/216;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(2) - 1)*(4*xi(3)^2 + 2*xi(3) - 1))/216;
      case 6
        dNdxi1 = (xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/216;
        dNdxi2 = -(xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/216;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) + 1)*(xi(2) - 1)*(4*xi(3)^2 + 2*xi(3) - 1))/216;
      case 7
        dNdxi1 = (xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/216;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/216;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) + 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/216;
      case 8
        dNdxi1 = -(xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/216;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/216;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/216;
      case 9
        dNdxi1 = (xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) - 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/27;
      case 10
        dNdxi1 = -(xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(4*xi(1)^2 + 2*xi(1) - 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) - 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(4*xi(3) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/27;
      case 11
        dNdxi1 = (xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) - 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = -(xi(1)*xi(3)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(4*xi(2)^2 + 2*xi(2) - 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/27;
      case 12
        dNdxi1 = (xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) - 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/27;
      case 13
        dNdxi1 = (xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(2) - 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 14
        dNdxi1 = -(xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) + 1)*(xi(2) - 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 15
        dNdxi1 = -(xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/27;
        dNdxi2 = -(xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) + 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 16
        dNdxi1 = (xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/27;
        dNdxi2 = -(xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 17
        dNdxi1 = (xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/27;
        dNdxi3 = -(xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(4*xi(3)^2 + 2*xi(3) - 1))/27;
      case 18
        dNdxi1 = -(xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = -(xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(4*xi(3) + 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/27;
      case 19
        dNdxi1 = (xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = -(xi(1)*xi(3)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/27;
        dNdxi3 = -(xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/27;
      case 20
        dNdxi1 = (xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = -(xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/27;
      case 21
        dNdxi1 = (xi(1)*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(3) - 1))/18;
        dNdxi2 = -(xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/36;
        dNdxi3 = -(xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/36;
      case 22
        dNdxi1 = (xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(4*xi(1)^2 + 2*xi(1) - 1))/36;
        dNdxi2 = (xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) + 1)*(xi(3) - 1))/18;
        dNdxi3 = -(xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/36;
      case 23
        dNdxi1 = (xi(1)*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) + 1)*(xi(3) - 1))/18;
        dNdxi2 = (xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(4*xi(2)^2 + 2*xi(2) - 1))/36;
        dNdxi3 = -(xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/36;
      case 24
        dNdxi1 = -(xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/36;
        dNdxi2 = (xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(3) - 1))/18;
        dNdxi3 = -(xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/36;
      case 25
        dNdxi1 = -(xi(2)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/36;
        dNdxi2 = -(xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/36;
        dNdxi3 = (xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(2) - 1))/18;
      case 26
        dNdxi1 = (xi(2)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/36;
        dNdxi2 = -(xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/36;
        dNdxi3 = (xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) + 1)*(xi(2) - 1))/18;
      case 27
        dNdxi1 = (xi(2)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/36;
        dNdxi2 = (xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/36;
        dNdxi3 = (xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) + 1)*(xi(2) + 1))/18;
      case 28
        dNdxi1 = -(xi(2)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/36;
        dNdxi2 = (xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/36;
        dNdxi3 = (xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(2) + 1))/18;
      case 29
        dNdxi1 = (xi(1)*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(3) + 1))/18;
        dNdxi2 = -(xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/36;
        dNdxi3 = (xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(4*xi(3)^2 + 2*xi(3) - 1))/36;
      case 30
        dNdxi1 = (xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/36;
        dNdxi2 = (xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) + 1)*(xi(3) + 1))/18;
        dNdxi3 = (xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/36;
      case 31
        dNdxi1 = (xi(1)*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) + 1)*(xi(3) + 1))/18;
        dNdxi2 = (xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/36;
        dNdxi3 = (xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/36;
      case 32
        dNdxi1 = -(xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/36;
        dNdxi2 = (xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(3) + 1))/18;
        dNdxi3 = (xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/36;
      case 33
        dNdxi1 = (xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) - 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/27;
      case 34
        dNdxi1 = -(xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(4*xi(1)^2 + 2*xi(1) - 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) - 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/27;
      case 35
        dNdxi1 = (xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) - 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = -(xi(1)*xi(3)*(2*xi(1) - 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(4*xi(2)^2 + 2*xi(2) - 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/27;
      case 36
        dNdxi1 = (xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) - 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/27;
      case 37
        dNdxi1 = (xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(2) - 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 38
        dNdxi1 = -(xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) + 1)*(xi(2) - 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 39
        dNdxi1 = -(xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/27;
        dNdxi2 = -(xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) + 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 40
        dNdxi1 = (xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/27;
        dNdxi2 = -(xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/27;
        dNdxi3 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 41
        dNdxi1 = (xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/27;
        dNdxi3 = -(xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(4*xi(3)^2 + 2*xi(3) - 1))/27;
      case 42
        dNdxi1 = -(xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = -(xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/27;
      case 43
        dNdxi1 = (xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = -(xi(1)*xi(3)*(2*xi(1) - 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/27;
        dNdxi3 = -(xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/27;
      case 44
        dNdxi1 = (xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/27;
        dNdxi2 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = -(xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/27;
      case 45
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) - 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/27;
      case 46
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 47
        dNdxi1 = (8*xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 48
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = (8*xi(1)*xi(3)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 49
        dNdxi1 = -(8*xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 50
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = (8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) - 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/27;
      case 51
        dNdxi1 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1))/9;
        dNdxi2 = (2*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/9;
        dNdxi3 = (2*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/9;
      case 52
        dNdxi1 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi2 = (2*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/9;
        dNdxi3 = (2*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/9;
      case 53
        dNdxi1 = -(2*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/9;
        dNdxi2 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(8*xi(2)^2 - 5)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi3 = (2*xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/9;
      case 54
        dNdxi1 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(8*xi(1)^2 - 5)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi2 = -(2*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/9;
        dNdxi3 = (2*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/9;
      case 55
        dNdxi1 = (2*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/9;
        dNdxi2 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi3 = (2*xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/9;
      case 56
        dNdxi1 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1))/9;
        dNdxi2 = (2*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/9;
        dNdxi3 = -(2*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/9;
      case 57
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) - 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/27;
      case 58
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 59
        dNdxi1 = (8*xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 60
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = (8*xi(1)*xi(3)*(2*xi(1) - 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 61
        dNdxi1 = -(8*xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 62
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = (8*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) - 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/27;
      case 63
        dNdxi1 = (2*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/9;
        dNdxi2 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1))/9;
        dNdxi3 = (2*xi(1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/9;
      case 64
        dNdxi1 = (2*xi(2)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/9;
        dNdxi2 = (2*xi(1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/9;
        dNdxi3 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1))/9;
      case 65
        dNdxi1 = -(2*xi(2)*(4*xi(1) + 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/9;
        dNdxi2 = (2*xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/9;
        dNdxi3 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1))/9;
      case 66
        dNdxi1 = (2*xi(2)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/9;
        dNdxi2 = -(2*xi(1)*(2*xi(1) - 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/9;
        dNdxi3 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1))/9;
      case 67
        dNdxi1 = (2*xi(2)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/9;
        dNdxi2 = (2*xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/9;
        dNdxi3 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1))/9;
      case 68
        dNdxi1 = (2*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/9;
        dNdxi2 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1))/9;
        dNdxi3 = -(2*xi(1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/9;
      case 69
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/27;
      case 70
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 71
        dNdxi1 = (8*xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 72
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = (8*xi(1)*xi(3)*(2*xi(1) - 1)*(4*xi(2) + 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 73
        dNdxi1 = -(8*xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 74
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = (8*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/27;
      case 75
        dNdxi1 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1))/9;
        dNdxi2 = (2*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/9;
        dNdxi3 = (2*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/9;
      case 76
        dNdxi1 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi2 = (2*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/9;
        dNdxi3 = (2*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/9;
      case 77
        dNdxi1 = -(2*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/9;
        dNdxi2 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi3 = (2*xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/9;
      case 78
        dNdxi1 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi2 = -(2*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/9;
        dNdxi3 = (2*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/9;
      case 79
        dNdxi1 = (2*xi(3)*(4*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/9;
        dNdxi2 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi3 = (2*xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/9;
      case 80
        dNdxi1 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1))/9;
        dNdxi2 = (2*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/9;
        dNdxi3 = -(2*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/9;
      case 81
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/27;
      case 82
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(4*xi(2) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 83
        dNdxi1 = (8*xi(2)*xi(3)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 84
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = (8*xi(1)*xi(3)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 85
        dNdxi1 = -(8*xi(2)*xi(3)*(4*xi(1) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 86
        dNdxi1 = -(8*xi(2)*xi(3)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = (8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/27;
      case 87
        dNdxi1 = (2*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/9;
        dNdxi2 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1))/9;
        dNdxi3 = (2*xi(1)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 4*xi(3)^2 + 2*xi(3) + 1))/9;
      case 88
        dNdxi1 = (2*xi(2)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/9;
        dNdxi2 = (2*xi(1)*(2*xi(1) - 1)*(4*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(2)^2 + 2*xi(2) + 1))/9;
        dNdxi3 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1))/9;
      case 89
        dNdxi1 = -(2*xi(2)*(4*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(1)^2 + 2*xi(1) - 1))/9;
        dNdxi2 = (2*xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/9;
        dNdxi3 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(8*xi(3)^2 - 5)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1))/9;
      case 90
        dNdxi1 = (2*xi(2)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/9;
        dNdxi2 = -(2*xi(1)*(2*xi(1) + 1)*(4*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(4*xi(2)^2 + 2*xi(2) - 1))/9;
        dNdxi3 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1))/9;
      case 91
        dNdxi1 = (2*xi(2)*(4*xi(1) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 4*xi(1)^2 + 2*xi(1) + 1))/9;
        dNdxi2 = (2*xi(1)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/9;
        dNdxi3 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1))/9;
      case 92
        dNdxi1 = (2*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/9;
        dNdxi2 = -(4*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1))/9;
        dNdxi3 = -(2*xi(1)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(4*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(4*xi(3)^2 + 2*xi(3) - 1))/9;
      case 93
        dNdxi1 = (xi(1)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1))/3;
        dNdxi2 = (xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1))/3;
        dNdxi3 = -((4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 16*xi(3)^3 + 12*xi(3)^2 + 2*xi(3) - 1))/6;
      case 94
        dNdxi1 = (xi(1)*xi(2)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(3) - 1)*(xi(3) + 1))/3;
        dNdxi2 = -((4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 16*xi(2)^3 + 12*xi(2)^2 + 2*xi(2) - 1))/6;
        dNdxi3 = (xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1))/3;
      case 95
        dNdxi1 = -((4*xi(2)^4 - 5*xi(2)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 16*xi(1)^3 - 12*xi(1)^2 + 2*xi(1) + 1))/6;
        dNdxi2 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1))/3;
        dNdxi3 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1))/3;
      case 96
        dNdxi1 = (xi(1)*xi(2)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1))/3;
        dNdxi2 = -((4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 16*xi(2)^3 - 12*xi(2)^2 + 2*xi(2) + 1))/6;
        dNdxi3 = (xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) + 1))/3;
      case 97
        dNdxi1 = -((4*xi(2)^4 - 5*xi(2)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 16*xi(1)^3 + 12*xi(1)^2 + 2*xi(1) - 1))/6;
        dNdxi2 = (xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(3) - 1)*(xi(3) + 1))/3;
        dNdxi3 = (xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(2) - 1)*(xi(2) + 1))/3;
      case 98
        dNdxi1 = (xi(1)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) + 1))/3;
        dNdxi2 = (xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) + 1))/3;
        dNdxi3 = -((4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 16*xi(3)^3 - 12*xi(3)^2 + 2*xi(3) + 1))/6;
      case 99
        dNdxi1 = (64*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = (64*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = (64*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 100
        dNdxi1 = (32*xi(1)*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(3) - 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi2 = -(16*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/9;
        dNdxi3 = -(16*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/9;
      case 101
        dNdxi1 = (64*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = (64*xi(1)*xi(3)*(2*xi(1) + 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = (64*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 102
        dNdxi1 = -(16*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/9;
        dNdxi2 = (32*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(3) - 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi3 = -(16*xi(1)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/9;
      case 103
        dNdxi1 = -(8*xi(1)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1))/3;
        dNdxi2 = -(8*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1))/3;
        dNdxi3 = (4*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/3;
      case 104
        dNdxi1 = -(16*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/9;
        dNdxi2 = (32*xi(1)*xi(2)*xi(3)*(2*xi(1) + 1)*(2*xi(3) - 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi3 = -(16*xi(1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/9;
      case 105
        dNdxi1 = (64*xi(2)*xi(3)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = (64*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = (64*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 106
        dNdxi1 = (32*xi(1)*xi(2)*xi(3)*(2*xi(2) + 1)*(2*xi(3) - 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi2 = -(16*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/9;
        dNdxi3 = -(16*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/9;
      case 107
        dNdxi1 = (64*xi(2)*xi(3)*(2*xi(2) + 1)*(2*xi(3) - 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = (64*xi(1)*xi(3)*(2*xi(1) + 1)*(2*xi(3) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = (64*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 + 3*xi(3)^2 + 4*xi(3) - 1))/27;
      case 108
        dNdxi1 = -(16*xi(2)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/9;
        dNdxi2 = -(16*xi(1)*(2*xi(1) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/9;
        dNdxi3 = (32*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(2) - 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1))/9;
      case 109
        dNdxi1 = -(8*xi(1)*xi(2)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1))/3;
        dNdxi2 = (4*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/3;
        dNdxi3 = -(8*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1))/3;
      case 110
        dNdxi1 = -(16*xi(2)*(2*xi(2) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/9;
        dNdxi2 = -(16*xi(1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/9;
        dNdxi3 = (32*xi(1)*xi(2)*xi(3)*(2*xi(1) + 1)*(2*xi(2) - 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1))/9;
      case 111
        dNdxi1 = (4*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/3;
        dNdxi2 = -(8*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1))/3;
        dNdxi3 = -(8*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1))/3;
      case 112
        dNdxi1 = 2*xi(1)*(8*xi(1)^2 - 5)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1);
        dNdxi2 = 2*xi(2)*(8*xi(2)^2 - 5)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1);
        dNdxi3 = 2*xi(3)*(8*xi(3)^2 - 5)*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(2)^4 - 5*xi(2)^2 + 1);
      case 113
        dNdxi1 = (4*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/3;
        dNdxi2 = -(8*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1))/3;
        dNdxi3 = -(8*xi(1)*xi(3)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1))/3;
      case 114
        dNdxi1 = -(16*xi(2)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/9;
        dNdxi2 = -(16*xi(1)*(2*xi(1) - 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/9;
        dNdxi3 = (32*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1))/9;
      case 115
        dNdxi1 = -(8*xi(1)*xi(2)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1))/3;
        dNdxi2 = (4*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(3)^4 - 5*xi(3)^2 + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/3;
        dNdxi3 = -(8*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1))/3;
      case 116
        dNdxi1 = -(16*xi(2)*(2*xi(2) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/9;
        dNdxi2 = -(16*xi(1)*(2*xi(1) + 1)*(2*xi(3) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/9;
        dNdxi3 = (32*xi(1)*xi(2)*xi(3)*(2*xi(1) + 1)*(2*xi(2) + 1)*(8*xi(3)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1))/9;
      case 117
        dNdxi1 = (64*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = (64*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = (64*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 118
        dNdxi1 = (32*xi(1)*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi2 = -(16*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/9;
        dNdxi3 = -(16*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/9;
      case 119
        dNdxi1 = (64*xi(2)*xi(3)*(2*xi(2) - 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = (64*xi(1)*xi(3)*(2*xi(1) + 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 + 3*xi(2)^2 + 4*xi(2) - 1))/27;
        dNdxi3 = (64*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) - 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 120
        dNdxi1 = -(16*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/9;
        dNdxi2 = (32*xi(1)*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi3 = -(16*xi(1)*(2*xi(1) - 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/9;
      case 121
        dNdxi1 = -(8*xi(1)*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1))/3;
        dNdxi2 = -(8*xi(2)*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1))/3;
        dNdxi3 = (4*(4*xi(1)^4 - 5*xi(1)^2 + 1)*(4*xi(2)^4 - 5*xi(2)^2 + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/3;
      case 122
        dNdxi1 = -(16*xi(3)*(2*xi(2) - 1)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/9;
        dNdxi2 = (32*xi(1)*xi(2)*xi(3)*(2*xi(1) + 1)*(2*xi(3) + 1)*(8*xi(2)^2 - 5)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi3 = -(16*xi(1)*(2*xi(1) + 1)*(2*xi(2) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/9;
      case 123
        dNdxi1 = (64*xi(2)*xi(3)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 + 3*xi(1)^2 + 4*xi(1) - 1))/27;
        dNdxi2 = (64*xi(1)*xi(3)*(2*xi(1) - 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = (64*xi(1)*xi(2)*(2*xi(1) - 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
      case 124
        dNdxi1 = (32*xi(1)*xi(2)*xi(3)*(2*xi(2) + 1)*(2*xi(3) + 1)*(8*xi(1)^2 - 5)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1))/9;
        dNdxi2 = -(16*xi(3)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/9;
        dNdxi3 = -(16*xi(2)*(2*xi(1) - 1)*(2*xi(1) + 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/9;
      case 125
        dNdxi1 = (64*xi(2)*xi(3)*(2*xi(2) + 1)*(2*xi(3) + 1)*(xi(2) - 1)*(xi(2) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(1)^3 - 3*xi(1)^2 + 4*xi(1) + 1))/27;
        dNdxi2 = (64*xi(1)*xi(3)*(2*xi(1) + 1)*(2*xi(3) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(3) - 1)*(xi(3) + 1)*(- 8*xi(2)^3 - 3*xi(2)^2 + 4*xi(2) + 1))/27;
        dNdxi3 = (64*xi(1)*xi(2)*(2*xi(1) + 1)*(2*xi(2) + 1)*(xi(1) - 1)*(xi(1) + 1)*(xi(2) - 1)*(xi(2) + 1)*(- 8*xi(3)^3 - 3*xi(3)^2 + 4*xi(3) + 1))/27;
    end

    if( i_eval==2 )

      vBase = aInvJac(:,1)*dNdxi1 + aInvJac(:,2)*dNdxi2 + aInvJac(:,3)*dNdxi3;

    elseif( i_eval==3 )

      vBase = aInvJac(:,4)*dNdxi1 + aInvJac(:,5)*dNdxi2 + aInvJac(:,6)*dNdxi3;

    else

      vBase = aInvJac(:,7)*dNdxi1 + aInvJac(:,8)*dNdxi2 + aInvJac(:,9)*dNdxi3;
    end

  case {22,23,24,32,33,34,42,43,44}   % Evaluation of second order derivatives.
    error('sf_hex_Q4: second order derivative evaluation not supported.')

  otherwise
    vBase = 0;

end
